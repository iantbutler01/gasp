name: Build, Test, and Publish Wheels

on:
  push:
    branches:
      - release
  pull_request:
    branches:
      - release

jobs:
  build:
    name: Build Wheels
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest]
        python-version: ["3.8.16", "3.9.16", "3.10.12", "3.11.6", "3.12.0"]
        architecture: ["x64", "arm64"]

        exclude:
          - platform: macos-latest
            python-version: "3.8.16"
            architecture: arm64
          - platform: macos-latest
            python-version: "3.9.16"
            architecture: arm64
          - platform: macos-latest
            python-version: "3.10.12"
            architecture: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}

      - name: Install dependencies
        run: |
          python -m ensurepip
          python -m pip install --upgrade pip maturin twine

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build Wheels
        run: |
          maturin build --release

      - name: Upload Wheels
        uses: actions/upload-artifact@v3
        with:
          name: built-wheels
          path: target/wheels/*.whl

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download built wheels
        uses: actions/download-artifact@v3
        with:
          name: built-wheels
          path: wheels

      - name: Publish to PyPI
        run: |
          python -m pip install --upgrade pip twine
          twine upload wheels/*.whl
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
